@page "/expenses"
@inject HttpClient Http
@using MatBlazor
@using ExpenseTracker.Shared.Models

<center>
    <h1>Expenses</h1>
    <p>
        <button class="btn btn-outline-success" @onclick="_ => OpenDialog()"><span class="oi oi-clipboard" aria-hidden="true">Add New Expense</span></button>
    </p>
    @if (expenses == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class='table'>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var expense in expenses)
                {
                    <tr>
                        <td>@expense.ID</td>
                        <td>@expense.Title</td>
                        <td>@expense.Amount</td>
                        <td>
                            <a href='/editexpense/@expense.ID'>Edit</a>  |
                            <a href='/delete/@expense.ID'>Delete</a>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    }
</center>
<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle>Add New Income</MatDialogTitle>
    <MatDialogContent>
        <AddExpense />
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="OkClose">Close</MatButton>
    </MatDialogActions>
</MatDialog>
@code {
    Expense[] expenses;
    public Expense expense { get; set; }
    public double Total { get; set; }
    bool dialogIsOpen = false;

    protected override async Task OnInitializedAsync()
    {
        expenses = await Http.GetFromJsonAsync<Expense[]>("api/Expense/GetExpenses");
    }

    void SetTotal(ChangeEventArgs e)
    {
        expense.Amount = (decimal)e.Value;
        Calc();
    }

    void Calc()
    {

        Total = SetTotal.Sum();

    }

    private void resum(int i, ChangeEventArgs e)
    {
        var n = 0;
        if (Int32.TryParse(e.Value.ToString(), out int auxn)) n = auxn;
        AmountList[i] = n;
        total = AmountList.Sum(x => x);
    }

    void OpenDialog()
    {
        dialogIsOpen = true;
    }

    void OkClose()
    {
        dialogIsOpen = false;
    }
}  